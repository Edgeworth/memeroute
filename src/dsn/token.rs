use derive_more::Display;
use strum::{Display as EnumDisplay, EnumString};

#[derive(Debug, Copy, Clone, PartialEq, Eq, PartialOrd, Ord, EnumString, EnumDisplay)]
#[strum(serialize_all = "snake_case")]
pub enum Tok {
    Area,
    Attach,
    Back,
    Both,
    Boundary,
    Circle,
    Circuit,
    Class,
    Clearance,
    Cm,
    Component,
    Connect,
    DefaultSmd,
    Front,
    Gate,
    Image,
    Inch,
    Jumper,
    Keepout,
    Layer,
    Library,
    Literal,
    LockType,
    #[strum(serialize = "(")]
    Lparen,
    Mil,
    Mixed,
    Mm,
    Net,
    Network,
    Off,
    On,
    Outline,
    Padstack,
    Parser,
    Path,
    Pcb,
    Pin,
    Pins,
    Place,
    Placement,
    Plane,
    Pn,
    Polygon,
    Position,
    Power,
    Property,
    Qarc,
    Rect,
    Reduced,
    Resolution,
    Rotate,
    #[strum(serialize = ")")]
    Rparen,
    Rule,
    Shape,
    Signal,
    Smd,
    SmdSmd,
    Structure,
    Testpoint,
    Type,
    Um,
    Unit,
    UseVia,
    ViaKeepout,
    Via,
    Width,
    Window,
    WireKeepout,
    Wire,
    Wiring,
}

#[derive(Debug, Display, Clone, PartialEq, Eq, PartialOrd, Ord)]
#[display(fmt = "Token({}:{})", tok, s)]
pub struct Token {
    pub tok: Tok,
    pub s: String,
}
